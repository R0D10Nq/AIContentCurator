version: '3.8'

services:
  # Основное приложение
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=sqlite:///./data/ai_content_curator.db
      - SECRET_KEY=${SECRET_KEY:-your-super-secret-key-change-this-in-production}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_WEBHOOK_URL=${TELEGRAM_WEBHOOK_URL:-http://localhost:8000}
      - ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://localhost:8000
      - DEBUG=${DEBUG:-False}
    volumes:
      - app_data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Telegram бот (отдельный сервис для polling режима)
  telegram-bot:
    build: .
    command: ["python", "telegram_bot/bot.py"]
    environment:
      - DATABASE_URL=sqlite:///./data/ai_content_curator.db
      - SECRET_KEY=${SECRET_KEY:-your-super-secret-key-change-this-in-production}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
    volumes:
      - app_data:/app/data
    restart: unless-stopped
    depends_on:
      - app
    profiles:
      - bot-polling

  # Nginx для продакшена (опционально)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    profiles:
      - production

volumes:
  app_data:
    driver: local
