name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * 1'  # Каждый понедельник в 2:00

jobs:
  # Сканирование зависимостей Python
  python-security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Настройка Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Установка зависимостей
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit
        pip install -r requirements.txt
        
    - name: Проверка уязвимостей в зависимостях
      run: |
        safety check --json --output safety-report.json || true
        bandit -r backend/ -f json -o bandit-report.json || true
        
    - name: Загрузка отчета безопасности Python
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: python-security-reports
        path: |
          safety-report.json
          bandit-report.json

  # Сканирование зависимостей Node.js
  nodejs-security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Настройка Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Установка зависимостей
      working-directory: ./frontend
      run: npm ci
      
    - name: Аудит безопасности npm
      working-directory: ./frontend
      run: |
        npm audit --audit-level=moderate --json > npm-audit.json || true
        
    - name: Загрузка отчета безопасности Node.js
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: nodejs-security-report
        path: frontend/npm-audit.json

  # Сканирование Docker образа
  docker-security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Установка Trivy
      run: |
        sudo apt-get update
        sudo apt-get install wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install trivy
        
    - name: Сборка и сканирование Docker образа
      run: |
        docker build -t ai-content-curator:test .
        trivy image --format sarif --output trivy-results.sarif ai-content-curator:test || true
        # Проверяем что файл создался и не пустой
        if [ ! -s "trivy-results.sarif" ]; then
          echo '{"version": "2.1.0", "runs": []}' > trivy-results.sarif
        fi
        
    - name: Загрузка результатов в GitHub Security
      uses: github/codeql-action/upload-sarif@v3
      if: always() && hashFiles('trivy-results.sarif') != ''
      with:
        sarif_file: trivy-results.sarif

  # CodeQL анализ
  codeql:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
      
    strategy:
      fail-fast: false
      matrix:
        language: [ 'python', 'javascript' ]
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Инициализация CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        
    - name: Автосборка
      uses: github/codeql-action/autobuild@v3
      
    - name: Анализ CodeQL
      uses: github/codeql-action/analyze@v3
